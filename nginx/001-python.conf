http {
    charset                utf-8;
    sendfile               on;
    tcp_nopush             on;
    tcp_nodelay            on;
    server_tokens          off;
    log_not_found          off;
    types_hash_max_size    2048;
    types_hash_bucket_size 64;
    client_max_body_size   16M;

    # MIME
    include                mime.types;
    default_type           application/octet-stream;

    # Logging
    access_log             off;
    error_log              /dev/null;

    # Limits
    limit_req_log_level    warn;
    limit_req_zone         $binary_remote_addr zone=login:10m rate=10r/m;

    # SSL
    ssl_session_timeout    1d;
    ssl_session_cache      shared:SSL:10m;
    ssl_session_tickets    off;

    # Diffie-Hellman parameter for DHE ciphersuites
    ssl_dhparam            /etc/nginx/dhparam.pem;

    # Mozilla Intermediate configuration
    ssl_protocols          TLSv1.2 TLSv1.3;
    ssl_ciphers            ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # OCSP Stapling
    ssl_stapling           on;
    ssl_stapling_verify    on;
    resolver               1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=60s;
    resolver_timeout       2s;

    # Load configs
    include                /etc/nginx/conf.d/*.conf;

    # server.name
    server {
        listen                               443 ssl http2;
        listen                               [::]:443 ssl http2;
        server_name                          server.name;
        set                                  $base /;
        root                                 $base/var/www/server;

        # SSL
        ssl_certificate                      /etc/letsencrypt/live/server.name/fullchain.pem;
        ssl_certificate_key                  /etc/letsencrypt/live/server.name/privkey.pem;
        ssl_trusted_certificate              /etc/letsencrypt/live/server.name/chain.pem;

        # security headers
        add_header X-XSS-Protection          "1; mode=block" always;
        add_header X-Content-Type-Options    "nosniff" always;
        add_header Referrer-Policy           "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy   "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
        add_header Permissions-Policy        "interest-cohort=()" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # . files
        location ~ /\.(?!well-known) {
            deny all;
        }

        # logging
        access_log /var/log/nginx/access.log combined buffer=512k flush=1m;
        error_log  /var/log/nginx/error.log info;

        # index.html fallback
        location / {
            try_files $uri $uri/ /index.html;
        }

        location / {

            # default uwsgi_params
            include                       uwsgi_params;

            # uwsgi settings
            uwsgi_pass                    127.0.0.1:8000;
            uwsgi_param Host              $host;
            uwsgi_param X-Real-IP         $remote_addr;
            uwsgi_param X-Forwarded-For   $proxy_add_x_forwarded_for;
            uwsgi_param X-Forwarded-Proto $http_x_forwarded_proto;
        }

        location /events/ {
            proxy_pass http://127.0.0.1:8000/;
            proxy_set_header Upgrade $http_upgrade; # up protocol
            proxy_set_header Connection "upgrade"; # up protocol
            proxy_http_version 1.1; # use http/1.1 for proxy
            proxy_connect_timeout 7d; # connection timeout
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # Django media
        location /media/ {
            alias $base/media/;
        }

        # Django static
        location /static/ {
            alias $base/static/;
        }

        # favicon.ico
        location = /favicon.ico {
            log_not_found off;
        }

        # robots.txt
        location = /robots.txt {
            log_not_found off;
        }

        # assets, media
        location ~* \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ {
            expires 7d;
        }

        # svg, fonts
        location ~* \.(?:svgz?|ttf|ttc|otf|eot|woff2?)$ {
            add_header Access-Control-Allow-Origin "*";
            expires    7d;
        }

        # gzip
        gzip            on;
        gzip_vary       on;
        gzip_proxied    any;
        gzip_comp_level 6;
        gzip_types      text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;
    }

    # non-www, subdomains redirect
    server {
        listen                  443 ssl http2;
        listen                  [::]:443 ssl http2;
        server_name             .server.name;

        # SSL
        ssl_certificate         /etc/letsencrypt/live/server.name/fullchain.pem;
        ssl_certificate_key     /etc/letsencrypt/live/server.name/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/server.name/chain.pem;
        return                  301 https://www.server.name$request_uri;
    }

    # HTTP redirect
    server {
        listen      80;
        listen      [::]:80;
        server_name .server.name;

        # ACME-challenge
        location ^~ /.well-known/acme-challenge/ {
            root /var/www/_letsencrypt;
        }

        location / {
            return 301 https://www.server.name$request_uri;
        }
    }
}
